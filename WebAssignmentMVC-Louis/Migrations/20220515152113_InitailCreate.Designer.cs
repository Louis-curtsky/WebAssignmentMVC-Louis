// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAssignmentMVC.Models.Person.Data;

namespace WebAssignmentMVC.Migrations
{
    [DbContext(typeof(PersonDBContext))]
    [Migration("20220515152113_InitailCreate")]
    partial class InitailCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAssignmentMVC.Models.Person.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryFiD")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryFiD");

                    b.HasIndex("PersonId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryFiD = 1,
                            Name = "Stockholm"
                        },
                        new
                        {
                            Id = 2,
                            CountryFiD = 1,
                            Name = "Helsingborg"
                        },
                        new
                        {
                            Id = 3,
                            CountryFiD = 1,
                            Name = "Växjö"
                        },
                        new
                        {
                            Id = 4,
                            CountryFiD = 1,
                            Name = "Gävle"
                        },
                        new
                        {
                            Id = 5,
                            CountryFiD = 1,
                            Name = "Trollhättan"
                        },
                        new
                        {
                            Id = 6,
                            CountryFiD = 3,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 7,
                            CountryFiD = 3,
                            Name = "Hamburg"
                        },
                        new
                        {
                            Id = 8,
                            CountryFiD = 3,
                            Name = "Munich"
                        });
                });

            modelBuilder.Entity("WebAssignmentMVC.Models.Person.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cname = "Sweden"
                        },
                        new
                        {
                            Id = 2,
                            Cname = "France"
                        },
                        new
                        {
                            Id = 3,
                            Cname = "Germany"
                        });
                });

            modelBuilder.Entity("WebAssignmentMVC.Models.Person.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LangName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LangName = "Swedish"
                        },
                        new
                        {
                            Id = 2,
                            LangName = "English"
                        },
                        new
                        {
                            Id = 3,
                            LangName = "Chinese"
                        });
                });

            modelBuilder.Entity("WebAssignmentMVC.Models.Person.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CtyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CtyId = 1,
                            FirstName = "Louis",
                            LastName = "Lim",
                            Phone = "0765551111"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CtyId = 2,
                            FirstName = "Michael",
                            LastName = "Kent",
                            Phone = "0733338888"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            CtyId = 3,
                            FirstName = "Åsa",
                            LastName = "Jason",
                            Phone = "0721231234"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            CtyId = 0,
                            FirstName = "Andy",
                            LastName = "Birch",
                            Phone = "0744448888"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            CtyId = 0,
                            FirstName = "Johnny",
                            LastName = "Walker",
                            Phone = "0751244674"
                        });
                });

            modelBuilder.Entity("WebAssignmentMVC.Models.Person.PersonLanguage", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("PersonId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("PersonLanguage");
                });

            modelBuilder.Entity("WebAssignmentMVC.Models.Person.City", b =>
                {
                    b.HasOne("WebAssignmentMVC.Models.Person.Country", "Countries")
                        .WithMany("Cities")
                        .HasForeignKey("CountryFiD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAssignmentMVC.Models.Person.Person", null)
                        .WithMany("City")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("WebAssignmentMVC.Models.Person.Country", b =>
                {
                    b.HasOne("WebAssignmentMVC.Models.Person.Person", null)
                        .WithMany("Country")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("WebAssignmentMVC.Models.Person.PersonLanguage", b =>
                {
                    b.HasOne("WebAssignmentMVC.Models.Person.Language", "Language")
                        .WithMany("personLanguage")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAssignmentMVC.Models.Person.Person", "Person")
                        .WithMany("languageSpoken")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
